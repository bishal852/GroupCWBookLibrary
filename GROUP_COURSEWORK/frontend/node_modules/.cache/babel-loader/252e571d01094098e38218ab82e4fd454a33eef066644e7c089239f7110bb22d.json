{"ast":null,"code":"import { API_URL } from \"../config\";\nconst getBooks = async (queryParams = {}) => {\n  const token = localStorage.getItem(\"token\");\n  if (!token) {\n    throw new Error(\"Authentication required\");\n  }\n\n  // Build query string from params\n  const params = new URLSearchParams();\n  Object.entries(queryParams).forEach(([key, value]) => {\n    if (value !== undefined && value !== null && value !== \"\") {\n      params.append(key, value);\n    }\n  });\n  const response = await fetch(`${API_URL}/api/admin/books?${params.toString()}`, {\n    headers: {\n      Authorization: `Bearer ${token}`\n    }\n  });\n  if (!response.ok) {\n    const error = await response.json();\n    throw new Error(error.message || \"Failed to fetch books\");\n  }\n  return await response.json();\n};\nconst getBookById = async id => {\n  const token = localStorage.getItem(\"token\");\n  if (!token) {\n    throw new Error(\"Authentication required\");\n  }\n  const response = await fetch(`${API_URL}/api/admin/books/${id}`, {\n    headers: {\n      Authorization: `Bearer ${token}`\n    }\n  });\n  if (!response.ok) {\n    const error = await response.json();\n    throw new Error(error.message || \"Failed to fetch book\");\n  }\n  return await response.json();\n};\nconst createBook = async bookData => {\n  const token = localStorage.getItem(\"token\");\n  if (!token) {\n    throw new Error(\"Authentication required\");\n  }\n  const response = await fetch(`${API_URL}/api/admin/books`, {\n    method: \"POST\",\n    headers: {\n      \"Content-Type\": \"application/json\",\n      Authorization: `Bearer ${token}`\n    },\n    body: JSON.stringify(bookData)\n  });\n  if (!response.ok) {\n    const error = await response.json();\n    throw new Error(error.message || \"Failed to create book\");\n  }\n  return await response.json();\n};\nconst updateBook = async (id, bookData) => {\n  const token = localStorage.getItem(\"token\");\n  if (!token) {\n    throw new Error(\"Authentication required\");\n  }\n  const response = await fetch(`${API_URL}/api/admin/books/${id}`, {\n    method: \"PUT\",\n    headers: {\n      \"Content-Type\": \"application/json\",\n      Authorization: `Bearer ${token}`\n    },\n    body: JSON.stringify(bookData)\n  });\n  if (!response.ok) {\n    const error = await response.json();\n    throw new Error(error.message || \"Failed to update book\");\n  }\n  return await response.json();\n};\nconst deleteBook = async (id, force = false) => {\n  const token = localStorage.getItem(\"token\");\n  if (!token) {\n    throw new Error(\"Authentication required\");\n  }\n\n  // Build the URL with the force parameter if needed\n  const url = force ? `${API_URL}/api/admin/books/${id}?force=true` : `${API_URL}/api/admin/books/${id}`;\n  console.log(`Deleting book ${id}, force=${force}, URL=${url}`);\n  const response = await fetch(url, {\n    method: \"DELETE\",\n    headers: {\n      Authorization: `Bearer ${token}`\n    }\n  });\n  if (!response.ok) {\n    const errorData = await response.json();\n    console.error(\"Delete book error response:\", errorData);\n    throw new Error(errorData.message || \"Failed to delete book\");\n  }\n  return await response.json();\n};\nconst updateBookStock = async (id, stockQuantity) => {\n  const token = localStorage.getItem(\"token\");\n  if (!token) {\n    throw new Error(\"Authentication required\");\n  }\n  const response = await fetch(`${API_URL}/api/admin/books/${id}/stock`, {\n    method: \"PATCH\",\n    headers: {\n      \"Content-Type\": \"application/json\",\n      Authorization: `Bearer ${token}`\n    },\n    body: JSON.stringify({\n      stockQuantity\n    })\n  });\n  if (!response.ok) {\n    const error = await response.json();\n    throw new Error(error.message || \"Failed to update book stock\");\n  }\n  return await response.json();\n};\nconst setDiscount = async discountData => {\n  const token = localStorage.getItem(\"token\");\n  if (!token) {\n    throw new Error(\"Authentication required\");\n  }\n  const response = await fetch(`${API_URL}/api/admin/books/discounts`, {\n    method: \"POST\",\n    headers: {\n      \"Content-Type\": \"application/json\",\n      Authorization: `Bearer ${token}`\n    },\n    body: JSON.stringify(discountData)\n  });\n  if (!response.ok) {\n    const error = await response.json();\n    throw new Error(error.message || \"Failed to set discount\");\n  }\n  return await response.json();\n};\nexport const adminBookService = {\n  getBooks,\n  getBookById,\n  createBook,\n  updateBook,\n  deleteBook,\n  updateBookStock,\n  setDiscount\n};","map":{"version":3,"names":["API_URL","getBooks","queryParams","token","localStorage","getItem","Error","params","URLSearchParams","Object","entries","forEach","key","value","undefined","append","response","fetch","toString","headers","Authorization","ok","error","json","message","getBookById","id","createBook","bookData","method","body","JSON","stringify","updateBook","deleteBook","force","url","console","log","errorData","updateBookStock","stockQuantity","setDiscount","discountData","adminBookService"],"sources":["C:/Users/nikku/Desktop/GROUP_COURSEWORK/frontend/src/services/adminBookService.js"],"sourcesContent":["import { API_URL } from \"../config\"\n\nconst getBooks = async (queryParams = {}) => {\n  const token = localStorage.getItem(\"token\")\n  if (!token) {\n    throw new Error(\"Authentication required\")\n  }\n\n  // Build query string from params\n  const params = new URLSearchParams()\n  Object.entries(queryParams).forEach(([key, value]) => {\n    if (value !== undefined && value !== null && value !== \"\") {\n      params.append(key, value)\n    }\n  })\n\n  const response = await fetch(`${API_URL}/api/admin/books?${params.toString()}`, {\n    headers: {\n      Authorization: `Bearer ${token}`,\n    },\n  })\n\n  if (!response.ok) {\n    const error = await response.json()\n    throw new Error(error.message || \"Failed to fetch books\")\n  }\n\n  return await response.json()\n}\n\nconst getBookById = async (id) => {\n  const token = localStorage.getItem(\"token\")\n  if (!token) {\n    throw new Error(\"Authentication required\")\n  }\n\n  const response = await fetch(`${API_URL}/api/admin/books/${id}`, {\n    headers: {\n      Authorization: `Bearer ${token}`,\n    },\n  })\n\n  if (!response.ok) {\n    const error = await response.json()\n    throw new Error(error.message || \"Failed to fetch book\")\n  }\n\n  return await response.json()\n}\n\nconst createBook = async (bookData) => {\n  const token = localStorage.getItem(\"token\")\n  if (!token) {\n    throw new Error(\"Authentication required\")\n  }\n\n  const response = await fetch(`${API_URL}/api/admin/books`, {\n    method: \"POST\",\n    headers: {\n      \"Content-Type\": \"application/json\",\n      Authorization: `Bearer ${token}`,\n    },\n    body: JSON.stringify(bookData),\n  })\n\n  if (!response.ok) {\n    const error = await response.json()\n    throw new Error(error.message || \"Failed to create book\")\n  }\n\n  return await response.json()\n}\n\nconst updateBook = async (id, bookData) => {\n  const token = localStorage.getItem(\"token\")\n  if (!token) {\n    throw new Error(\"Authentication required\")\n  }\n\n  const response = await fetch(`${API_URL}/api/admin/books/${id}`, {\n    method: \"PUT\",\n    headers: {\n      \"Content-Type\": \"application/json\",\n      Authorization: `Bearer ${token}`,\n    },\n    body: JSON.stringify(bookData),\n  })\n\n  if (!response.ok) {\n    const error = await response.json()\n    throw new Error(error.message || \"Failed to update book\")\n  }\n\n  return await response.json()\n}\n\nconst deleteBook = async (id, force = false) => {\n  const token = localStorage.getItem(\"token\")\n  if (!token) {\n    throw new Error(\"Authentication required\")\n  }\n\n  // Build the URL with the force parameter if needed\n  const url = force ? `${API_URL}/api/admin/books/${id}?force=true` : `${API_URL}/api/admin/books/${id}`\n\n  console.log(`Deleting book ${id}, force=${force}, URL=${url}`)\n\n  const response = await fetch(url, {\n    method: \"DELETE\",\n    headers: {\n      Authorization: `Bearer ${token}`,\n    },\n  })\n\n  if (!response.ok) {\n    const errorData = await response.json()\n    console.error(\"Delete book error response:\", errorData)\n    throw new Error(errorData.message || \"Failed to delete book\")\n  }\n\n  return await response.json()\n}\n\nconst updateBookStock = async (id, stockQuantity) => {\n  const token = localStorage.getItem(\"token\")\n  if (!token) {\n    throw new Error(\"Authentication required\")\n  }\n\n  const response = await fetch(`${API_URL}/api/admin/books/${id}/stock`, {\n    method: \"PATCH\",\n    headers: {\n      \"Content-Type\": \"application/json\",\n      Authorization: `Bearer ${token}`,\n    },\n    body: JSON.stringify({ stockQuantity }),\n  })\n\n  if (!response.ok) {\n    const error = await response.json()\n    throw new Error(error.message || \"Failed to update book stock\")\n  }\n\n  return await response.json()\n}\n\nconst setDiscount = async (discountData) => {\n  const token = localStorage.getItem(\"token\")\n  if (!token) {\n    throw new Error(\"Authentication required\")\n  }\n\n  const response = await fetch(`${API_URL}/api/admin/books/discounts`, {\n    method: \"POST\",\n    headers: {\n      \"Content-Type\": \"application/json\",\n      Authorization: `Bearer ${token}`,\n    },\n    body: JSON.stringify(discountData),\n  })\n\n  if (!response.ok) {\n    const error = await response.json()\n    throw new Error(error.message || \"Failed to set discount\")\n  }\n\n  return await response.json()\n}\n\nexport const adminBookService = {\n  getBooks,\n  getBookById,\n  createBook,\n  updateBook,\n  deleteBook,\n  updateBookStock,\n  setDiscount,\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}